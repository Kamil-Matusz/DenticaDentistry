// <auto-generated />
using System;
using Dentica_Dentistry.Infrastructure.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Dentica_Dentistry.Infrastructure.DAL.Migrations
{
    [DbContext(typeof(DenticaDentistryDbContext))]
    partial class DenticaDentistryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.1.23111.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Dentica_Dentistry.Core.Entities.DentistIndustry", b =>
                {
                    b.Property<int>("DentistIndustryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DentistIndustryId"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.HasKey("DentistIndustryId");

                    b.ToTable("DentistIndustries");
                });

            modelBuilder.Entity("Dentica_Dentistry.Core.Entities.Reservation", b =>
                {
                    b.Property<Guid>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BookerName")
                        .HasColumnType("text");

                    b.Property<int>("DentistIndustryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ReservationId");

                    b.HasIndex("DentistIndustryId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("Dentica_Dentistry.Core.Entities.Reservation", b =>
                {
                    b.HasOne("Dentica_Dentistry.Core.Entities.DentistIndustry", null)
                        .WithMany("Reservations")
                        .HasForeignKey("DentistIndustryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Dentica_Dentistry.Core.Entities.DentistIndustry", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
